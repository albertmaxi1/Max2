{"ast":null,"code":"// WARNING: This file contains a hardcoded API key for demonstration as per your request.\n// DO NOT commit real API keys to public repositories in production!\nexport const callGeminiTextAPI=async prompt=>{try{let chatHistory=[];chatHistory.push({role:\"user\",parts:[{text:prompt}]});const payload={contents:chatHistory};const apiKey=\"AIzaSyDr8Zs5bbGFhGHHGq0o4MiUzX2KEnPb89g\";const apiUrl=\"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=\".concat(apiKey);const response=await fetch(apiUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const result=await response.json();if(result.candidates&&result.candidates.length>0&&result.candidates[0].content&&result.candidates[0].content.parts&&result.candidates[0].content.parts.length>0){return result.candidates[0].content.parts[0].text;}else{return\"Failed to generate text. Please try again.\";}}catch(error){return\"Error generating text. Please check console.\";}};export const callImagenAPI=async prompt=>{try{const payload={instances:{prompt:prompt},parameters:{\"sampleCount\":1}};const apiKey=\"AIzaSyDr8Zs5bbGFhGHHGq0o4MiUzX2KEnPb89g\";const apiUrl=\"https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=\".concat(apiKey);const response=await fetch(apiUrl,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(payload)});const result=await response.json();if(result.predictions&&result.predictions.length>0&&result.predictions[0].bytesBase64Encoded){return\"data:image/png;base64,\".concat(result.predictions[0].bytesBase64Encoded);}else{return\"https://placehold.co/1200x600/0A1931/FFD700?text=Image+Error\";}}catch(error){return\"https://placehold.co/1200x600/0A1931/FFD700?text=Image+Error\";}};","map":{"version":3,"names":["callGeminiTextAPI","prompt","chatHistory","push","role","parts","text","payload","contents","apiKey","apiUrl","concat","response","fetch","method","headers","body","JSON","stringify","result","json","candidates","length","content","error","callImagenAPI","instances","parameters","predictions","bytesBase64Encoded"],"sources":["/Users/albertmartinez-arizala/Desktop/max2/src/utils/api.js"],"sourcesContent":["// WARNING: This file contains a hardcoded API key for demonstration as per your request.\n// DO NOT commit real API keys to public repositories in production!\nexport const callGeminiTextAPI = async (prompt) => {\n  try {\n    let chatHistory = [];\n    chatHistory.push({ role: \"user\", parts: [{ text: prompt }] });\n    const payload = { contents: chatHistory };\n    const apiKey = \"AIzaSyDr8Zs5bbGFhGHHGq0o4MiUzX2KEnPb89g\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`;\n\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n\n    const result = await response.json();\n\n    if (result.candidates && result.candidates.length > 0 &&\n        result.candidates[0].content && result.candidates[0].content.parts &&\n        result.candidates[0].content.parts.length > 0) {\n      return result.candidates[0].content.parts[0].text;\n    } else {\n      return \"Failed to generate text. Please try again.\";\n    }\n  } catch (error) {\n    return \"Error generating text. Please check console.\";\n  }\n};\n\nexport const callImagenAPI = async (prompt) => {\n  try {\n    const payload = { instances: { prompt: prompt }, parameters: { \"sampleCount\": 1 } };\n    const apiKey = \"AIzaSyDr8Zs5bbGFhGHHGq0o4MiUzX2KEnPb89g\";\n    const apiUrl = `https://generativelanguage.googleapis.com/v1beta/models/imagen-3.0-generate-002:predict?key=${apiKey}`;\n\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    });\n\n    const result = await response.json();\n\n    if (result.predictions && result.predictions.length > 0 && result.predictions[0].bytesBase64Encoded) {\n      return `data:image/png;base64,${result.predictions[0].bytesBase64Encoded}`;\n    } else {\n      return \"https://placehold.co/1200x600/0A1931/FFD700?text=Image+Error\";\n    }\n  } catch (error) {\n    return \"https://placehold.co/1200x600/0A1931/FFD700?text=Image+Error\";\n  }\n};"],"mappings":"AAAA;AACA;AACA,MAAO,MAAM,CAAAA,iBAAiB,CAAG,KAAO,CAAAC,MAAM,EAAK,CACjD,GAAI,CACF,GAAI,CAAAC,WAAW,CAAG,EAAE,CACpBA,WAAW,CAACC,IAAI,CAAC,CAAEC,IAAI,CAAE,MAAM,CAAEC,KAAK,CAAE,CAAC,CAAEC,IAAI,CAAEL,MAAO,CAAC,CAAE,CAAC,CAAC,CAC7D,KAAM,CAAAM,OAAO,CAAG,CAAEC,QAAQ,CAAEN,WAAY,CAAC,CACzC,KAAM,CAAAO,MAAM,CAAG,yCAAyC,CACxD,KAAM,CAAAC,MAAM,iGAAAC,MAAA,CAAmGF,MAAM,CAAE,CAEvH,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,MAAM,CAAE,CACnCI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACX,OAAO,CAC9B,CAAC,CAAC,CAEF,KAAM,CAAAY,MAAM,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAEpC,GAAID,MAAM,CAACE,UAAU,EAAIF,MAAM,CAACE,UAAU,CAACC,MAAM,CAAG,CAAC,EACjDH,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,EAAIJ,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAAClB,KAAK,EAClEc,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAAClB,KAAK,CAACiB,MAAM,CAAG,CAAC,CAAE,CACjD,MAAO,CAAAH,MAAM,CAACE,UAAU,CAAC,CAAC,CAAC,CAACE,OAAO,CAAClB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CACnD,CAAC,IAAM,CACL,MAAO,4CAA4C,CACrD,CACF,CAAE,MAAOkB,KAAK,CAAE,CACd,MAAO,8CAA8C,CACvD,CACF,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAO,CAAAxB,MAAM,EAAK,CAC7C,GAAI,CACF,KAAM,CAAAM,OAAO,CAAG,CAAEmB,SAAS,CAAE,CAAEzB,MAAM,CAAEA,MAAO,CAAC,CAAE0B,UAAU,CAAE,CAAE,aAAa,CAAE,CAAE,CAAE,CAAC,CACnF,KAAM,CAAAlB,MAAM,CAAG,yCAAyC,CACxD,KAAM,CAAAC,MAAM,gGAAAC,MAAA,CAAkGF,MAAM,CAAE,CAEtH,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACH,MAAM,CAAE,CACnCI,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACX,OAAO,CAC9B,CAAC,CAAC,CAEF,KAAM,CAAAY,MAAM,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAEpC,GAAID,MAAM,CAACS,WAAW,EAAIT,MAAM,CAACS,WAAW,CAACN,MAAM,CAAG,CAAC,EAAIH,MAAM,CAACS,WAAW,CAAC,CAAC,CAAC,CAACC,kBAAkB,CAAE,CACnG,+BAAAlB,MAAA,CAAgCQ,MAAM,CAACS,WAAW,CAAC,CAAC,CAAC,CAACC,kBAAkB,EAC1E,CAAC,IAAM,CACL,MAAO,8DAA8D,CACvE,CACF,CAAE,MAAOL,KAAK,CAAE,CACd,MAAO,8DAA8D,CACvE,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}